'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Accordion = function (_React$Component) {
  _inherits(Accordion, _React$Component);

  function Accordion(props) {
    _classCallCheck(this, Accordion);

    var _this = _possibleConstructorReturn(this, (Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call(this, props));

    var _this$props = _this.props,
        _this$props$duration = _this$props.duration,
        duration = _this$props$duration === undefined ? 400 : _this$props$duration,
        _this$props$easing = _this$props.easing,
        easing = _this$props$easing === undefined ? 'ease-in-out' : _this$props$easing,
        _this$props$open = _this$props.open,
        open = _this$props$open === undefined ? false : _this$props$open;


    _this.transition = 'height ' + duration + 'ms ' + easing;

    _this.state = {
      height: open ? 'auto' : 0,
      transition: 'none',
      closed: !open
    };
    return _this;
  }

  _createClass(Accordion, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prev) {
      var _this2 = this;

      var _open = prev.open;
      var open = this.props.open;
      var rerender = this.state.rerender;


      if (open !== _open) {
        this[open ? 'open' : 'close']();
        return;
      }

      if (rerender) {
        setTimeout(function () {
          _this2.setHeight();
        }, 50);
      }
    }
  }, {
    key: 'close',
    value: function close() {
      this.setState({
        height: this.inner.offsetHeight,
        transition: this.transition,
        rerender: true
      });
    }
  }, {
    key: 'open',
    value: function open() {
      this.setState({
        transition: this.transition,
        closed: false,
        rerender: true
      });
    }
  }, {
    key: 'setHeight',
    value: function setHeight() {
      var open = this.props.open;

      this.setState({
        height: open ? this.inner.offsetHeight : 0,
        rerender: false
      });
    }
  }, {
    key: 'handleTransitionEnd',
    value: function handleTransitionEnd() {
      if (this.props.open) {
        this.setState({ height: 'auto' });
      } else {
        this.setState({ closed: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var children = this.props.children;
      var _state = this.state,
          height = _state.height,
          closed = _state.closed;


      var styles = {
        height: height,
        overflow: 'hidden'
      };['transition', 'WebkitTransition', 'msTransition'].map(function (prop) {
        return styles[prop] = _this3.transition;
      });

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          {
            style: styles,
            onTransitionEnd: function onTransitionEnd() {
              return _this3.handleTransitionEnd();
            } },
          _react2.default.createElement(
            'div',
            { ref: function ref(el) {
                return _this3.inner = el;
              } },
            _react2.default.createElement(
              'div',
              { style: { display: closed ? 'none' : 'block' } },
              children
            )
          )
        )
      );
    }
  }]);

  return Accordion;
}(_react2.default.Component);

exports.default = Accordion;