{"version":3,"sources":["../src/empty.js","../src/compat.js","../node_modules/react-redux/src/components/Context.js","../node_modules/react-redux/src/components/Provider.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-redux/src/components/connectAdvanced.js","../node_modules/react-redux/src/utils/shallowEqual.js","../node_modules/react-redux/src/connect/wrapMapToProps.js","../node_modules/react-redux/src/connect/mergeProps.js","../node_modules/react-redux/src/connect/connect.js","../node_modules/react-redux/src/connect/selectorFactory.js","../src/index.js","../node_modules/react-redux/src/connect/mapStateToProps.js","../node_modules/react-redux/src/connect/mapDispatchToProps.js"],"names":["invariant","React","createContext","forwardRef","empty","createElement","h","ReactReduxContext","Provider","props","_this","_Component","call","this","store","state","storeState","getState","componentDidMount","_isMounted","subscribe","componentWillUnmount","unsubscribe","componentDidUpdate","prevProps","_this2","newStoreState","setState","providerState","postMountStoreState","render","context","value","children","Component","Object","defineProperty","exports","c","d","b","e","f","g","k","l","m","n","p","q","r","t","a","u","$$typeof","type","v","module","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","ReactIs","isMemo","ForwardRef","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","connectAdvanced","selectorFactory","_temp","_ref","_ref$getDisplayName","getDisplayName","_ref$methodName","methodName","_ref$renderCountProp","renderCountProp","undefined","_ref$shouldHandleStat","shouldHandleStateChanges","_ref$storeKey","storeKey","withRef","_ref$forwardRef","_ref$context","connectOptions","_objectWithoutPropertiesLoose","Context","WrappedComponent","wrappedComponentName","selectorFactoryOptions","_extends","pure","OuterBaseComponent","PureComponent","Connect","_OuterBaseComponent","lastProps","lastState","lastDerivedProps","lastStore","lastSelectorFactoryOptions","sourceSelector","lastChildProps","lastForwardRef","lastChildElement","lastComponent","selectDerivedProps","dispatch","nextProps","selectChildElement","childProps","ref","indirectRenderWrappedComponent","bind","_assertThisInitialized","_inheritsLoose","_proto","renderWrappedComponent","forwardedRef","wrapperProps","derivedProps","ContextToUse","Consumer","isContextConsumer","forwarded","hoistStatics","hasOwn","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","wrapMapToPropsConstant","getConstant","options","constant","constantSelector","dependsOnOwnProps","getDependsOnOwnProps","mapToProps","wrapMapToPropsFunc","proxy","stateOrDispatch","ownProps","defaultMergeProps","stateProps","dispatchProps","_ref$connectHOC","connectHOC","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","defaultMergePropsFactories","mergeProps","mergedProps","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","impureFinalPropsSelectorFactory","mapStateToProps","mapDispatchToProps","pureFinalPropsSelectorFactory","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","handleSubsequentCalls","nextState","nextOwnProps","nextStateProps","statePropsChanged","propsChanged","stateChanged","finalPropsSelectorFactory","_ref2","initMapStateToProps","initMapDispatchToProps","initMergeProps","match","arg","factories","result","Error","strictEqual","connect","bindActionCreators","defaultSelectorFactory","_temp2","_ref2$pure","_ref2$areStatesEqual","_ref2$areOwnPropsEqua","_ref2$areStatePropsEq","_ref2$areMergedPropsE","extraOptions"],"mappings":"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","file":"dist/preact-redux.min.js.map","sourcesContent":["export default function(){}\n","export { Component, Component as PureComponent } from \"preact\";\nimport { createContext } from \"preact-context\";\nimport { h } from \"preact\";\nimport empty from \"./empty\";\n\nexport default {\n\tcreateContext,\n\tforwardRef: empty,\n\tcreateElement: h\n};\n","import React from 'react'\n\nexport const ReactReduxContext = React.createContext(null)\n\nexport default ReactReduxContext\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ReactReduxContext } from './Context'\n\nclass Provider extends Component {\n  constructor(props) {\n    super(props)\n\n    const { store } = props\n\n    this.state = {\n      storeState: store.getState(),\n      store\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.subscribe()\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe()\n\n    this._isMounted = false\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.store !== prevProps.store) {\n      if (this.unsubscribe) this.unsubscribe()\n\n      this.subscribe()\n    }\n  }\n\n  subscribe() {\n    const { store } = this.props\n\n    this.unsubscribe = store.subscribe(() => {\n      const newStoreState = store.getState()\n\n      if (!this._isMounted) {\n        return\n      }\n\n      this.setState(providerState => {\n        // If the value is the same, skip the unnecessary state update.\n        if (providerState.storeState === newStoreState) {\n          return null\n        }\n\n        return { storeState: newStoreState }\n      })\n    })\n\n    // Actions might have been dispatched between render and mount - handle those\n    const postMountStoreState = store.getState()\n    if (postMountStoreState !== this.state.storeState) {\n      this.setState({ storeState: postMountStoreState })\n    }\n  }\n\n  render() {\n    const Context = this.props.context || ReactReduxContext\n\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nProvider.propTypes = {\n  store: PropTypes.shape({\n    subscribe: PropTypes.func.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    getState: PropTypes.func.isRequired\n  }),\n  context: PropTypes.object,\n  children: PropTypes.any\n}\n\nexport default Provider\n","/** @license React v16.8.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar ReactIs = require('react-is');\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar FORWARD_REF_STATICS = {\n    '$$typeof': true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\n\nvar MEMO_STATICS = {\n    '$$typeof': true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\n\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n    if (ReactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    }\n    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') {\n        // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import hoistStatics from 'hoist-non-react-statics'\nimport invariant from 'invariant'\nimport React, { Component, PureComponent } from 'react'\nimport { isValidElementType, isContextConsumer } from 'react-is'\n\nimport { ReactReduxContext } from './Context'\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp)\n  } catch (err) {\n    return String(Comp)\n  }\n}\n\nexport default function connectAdvanced(\n  /*\n    selectorFactory is a func that is responsible for returning the selector function used to\n    compute new props from state, props, and dispatch. For example:\n\n      export default connectAdvanced((dispatch, options) => (state, props) => ({\n        thing: state.things[props.thingId],\n        saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n      }))(YourComponent)\n\n    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n    outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n    the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n\n    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n    props. Do not use connectAdvanced directly without memoizing results between calls to your\n    selector, otherwise the Connect component will re-render on every state or props change.\n  */\n  selectorFactory,\n  // options object:\n  {\n    // the func used to compute this HOC's displayName from the wrapped component's displayName.\n    // probably overridden by wrapper functions such as connect()\n    getDisplayName = name => `ConnectAdvanced(${name})`,\n\n    // shown in error messages\n    // probably overridden by wrapper functions such as connect()\n    methodName = 'connectAdvanced',\n\n    // REMOVED: if defined, the name of the property passed to the wrapped element indicating the number of\n    // calls to render. useful for watching in react devtools for unnecessary re-renders.\n    renderCountProp = undefined,\n\n    // determines whether this HOC subscribes to store changes\n    shouldHandleStateChanges = true,\n\n    // REMOVED: the key of props/context to get the store\n    storeKey = 'store',\n\n    // REMOVED: expose the wrapped component via refs\n    withRef = false,\n\n    // use React's forwardRef to expose a ref of the wrapped component\n    forwardRef = false,\n\n    // the context consumer to use\n    context = ReactReduxContext,\n\n    // additional options are passed through to the selectorFactory\n    ...connectOptions\n  } = {}\n) {\n  invariant(\n    renderCountProp === undefined,\n    `renderCountProp is removed. render counting is built into the latest React dev tools profiling extension`\n  )\n\n  invariant(\n    !withRef,\n    'withRef is removed. To access the wrapped instance, use a ref on the connected component'\n  )\n\n  const customStoreWarningMessage =\n    'To use a custom Redux store for specific components,  create a custom React context with ' +\n    \"React.createContext(), and pass the context object to React Redux's Provider and specific components\" +\n    ' like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' +\n    'You may also pass a {context : MyContext} option to connect'\n\n  invariant(\n    storeKey === 'store',\n    'storeKey has been removed and does not do anything. ' +\n      customStoreWarningMessage\n  )\n\n  const Context = context\n\n  return function wrapWithConnect(WrappedComponent) {\n    if (process.env.NODE_ENV !== 'production') {\n      invariant(\n        isValidElementType(WrappedComponent),\n        `You must pass a component to the function returned by ` +\n          `${methodName}. Instead received ${stringifyComponent(\n            WrappedComponent\n          )}`\n      )\n    }\n\n    const wrappedComponentName =\n      WrappedComponent.displayName || WrappedComponent.name || 'Component'\n\n    const displayName = getDisplayName(wrappedComponentName)\n\n    const selectorFactoryOptions = {\n      ...connectOptions,\n      getDisplayName,\n      methodName,\n      renderCountProp,\n      shouldHandleStateChanges,\n      storeKey,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent\n    }\n\n    const { pure } = connectOptions\n\n    let OuterBaseComponent = Component\n\n    if (pure) {\n      OuterBaseComponent = PureComponent\n    }\n\n    function makeDerivedPropsSelector() {\n      let lastProps\n      let lastState\n      let lastDerivedProps\n      let lastStore\n      let lastSelectorFactoryOptions\n      let sourceSelector\n\n      return function selectDerivedProps(\n        state,\n        props,\n        store,\n        selectorFactoryOptions\n      ) {\n        if (pure && lastProps === props && lastState === state) {\n          return lastDerivedProps\n        }\n\n        if (\n          store !== lastStore ||\n          lastSelectorFactoryOptions !== selectorFactoryOptions\n        ) {\n          lastStore = store\n          lastSelectorFactoryOptions = selectorFactoryOptions\n          sourceSelector = selectorFactory(\n            store.dispatch,\n            selectorFactoryOptions\n          )\n        }\n\n        lastProps = props\n        lastState = state\n\n        const nextProps = sourceSelector(state, props)\n\n        lastDerivedProps = nextProps\n        return lastDerivedProps\n      }\n    }\n\n    function makeChildElementSelector() {\n      let lastChildProps, lastForwardRef, lastChildElement, lastComponent\n\n      return function selectChildElement(\n        WrappedComponent,\n        childProps,\n        forwardRef\n      ) {\n        if (\n          childProps !== lastChildProps ||\n          forwardRef !== lastForwardRef ||\n          lastComponent !== WrappedComponent\n        ) {\n          lastChildProps = childProps\n          lastForwardRef = forwardRef\n          lastComponent = WrappedComponent\n          lastChildElement = (\n            <WrappedComponent {...childProps} ref={forwardRef} />\n          )\n        }\n\n        return lastChildElement\n      }\n    }\n\n    class Connect extends OuterBaseComponent {\n      constructor(props) {\n        super(props)\n        invariant(\n          forwardRef ? !props.wrapperProps[storeKey] : !props[storeKey],\n          'Passing redux store in props has been removed and does not do anything. ' +\n            customStoreWarningMessage\n        )\n        this.selectDerivedProps = makeDerivedPropsSelector()\n        this.selectChildElement = makeChildElementSelector()\n        this.indirectRenderWrappedComponent = this.indirectRenderWrappedComponent.bind(\n          this\n        )\n      }\n\n      indirectRenderWrappedComponent(value) {\n        // calling renderWrappedComponent on prototype from indirectRenderWrappedComponent bound to `this`\n        return this.renderWrappedComponent(value)\n      }\n\n      renderWrappedComponent(value) {\n        invariant(\n          value,\n          `Could not find \"store\" in the context of ` +\n            `\"${displayName}\". Either wrap the root component in a <Provider>, ` +\n            `or pass a custom React context provider to <Provider> and the corresponding ` +\n            `React context consumer to ${displayName} in connect options.`\n        )\n        const { storeState, store } = value\n\n        let wrapperProps = this.props\n        let forwardedRef\n\n        if (forwardRef) {\n          wrapperProps = this.props.wrapperProps\n          forwardedRef = this.props.forwardedRef\n        }\n\n        let derivedProps = this.selectDerivedProps(\n          storeState,\n          wrapperProps,\n          store,\n          selectorFactoryOptions\n        )\n\n        return this.selectChildElement(\n          WrappedComponent,\n          derivedProps,\n          forwardedRef\n        )\n      }\n\n      render() {\n        const ContextToUse =\n          this.props.context &&\n          this.props.context.Consumer &&\n          isContextConsumer(<this.props.context.Consumer />)\n            ? this.props.context\n            : Context\n\n        return (\n          <ContextToUse.Consumer>\n            {this.indirectRenderWrappedComponent}\n          </ContextToUse.Consumer>\n        )\n      }\n    }\n\n    Connect.WrappedComponent = WrappedComponent\n    Connect.displayName = displayName\n\n    if (forwardRef) {\n      const forwarded = React.forwardRef(function forwardConnectRef(\n        props,\n        ref\n      ) {\n        return <Connect wrapperProps={props} forwardedRef={ref} />\n      })\n\n      forwarded.displayName = displayName\n      forwarded.WrappedComponent = WrappedComponent\n      return hoistStatics(forwarded, WrappedComponent)\n    }\n\n    return hoistStatics(Connect, WrappedComponent)\n  }\n}\n","const hasOwn = Object.prototype.hasOwnProperty\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\n  } else {\n    return x !== x && y !== y\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) return false\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false\n    }\n  }\n\n  return true\n}\n","import verifyPlainObject from '../utils/verifyPlainObject'\n\nexport function wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    const constant = getConstant(dispatch, options)\n\n    function constantSelector() {\n      return constant\n    }\n    constantSelector.dependsOnOwnProps = false\n    return constantSelector\n  }\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nexport function getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null &&\n    mapToProps.dependsOnOwnProps !== undefined\n    ? Boolean(mapToProps.dependsOnOwnProps)\n    : mapToProps.length !== 1\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, { displayName }) {\n    const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps\n        ? proxy.mapToProps(stateOrDispatch, ownProps)\n        : proxy.mapToProps(stateOrDispatch)\n    }\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true\n\n    proxy.mapToProps = function detectFactoryAndVerify(\n      stateOrDispatch,\n      ownProps\n    ) {\n      proxy.mapToProps = mapToProps\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps)\n      let props = proxy(stateOrDispatch, ownProps)\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props)\n        props = proxy(stateOrDispatch, ownProps)\n      }\n\n      if (process.env.NODE_ENV !== 'production')\n        verifyPlainObject(props, displayName, methodName)\n\n      return props\n    }\n\n    return proxy\n  }\n}\n","import verifyPlainObject from '../utils/verifyPlainObject'\n\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return { ...ownProps, ...stateProps, ...dispatchProps }\n}\n\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(\n    dispatch,\n    { displayName, pure, areMergedPropsEqual }\n  ) {\n    let hasRunOnce = false\n    let mergedProps\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))\n          mergedProps = nextMergedProps\n      } else {\n        hasRunOnce = true\n        mergedProps = nextMergedProps\n\n        if (process.env.NODE_ENV !== 'production')\n          verifyPlainObject(mergedProps, displayName, 'mergeProps')\n      }\n\n      return mergedProps\n    }\n  }\n}\n\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function'\n    ? wrapMergePropsFunc(mergeProps)\n    : undefined\n}\n\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : undefined\n}\n\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted]\n","import connectAdvanced from '../components/connectAdvanced'\nimport shallowEqual from '../utils/shallowEqual'\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps'\nimport defaultMapStateToPropsFactories from './mapStateToProps'\nimport defaultMergePropsFactories from './mergeProps'\nimport defaultSelectorFactory from './selectorFactory'\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (let i = factories.length - 1; i >= 0; i--) {\n    const result = factories[i](arg)\n    if (result) return result\n  }\n\n  return (dispatch, options) => {\n    throw new Error(\n      `Invalid value of type ${typeof arg} for ${name} argument when connecting component ${\n        options.wrappedComponentName\n      }.`\n    )\n  }\n}\n\nfunction strictEqual(a, b) {\n  return a === b\n}\n\n// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nexport function createConnect({\n  connectHOC = connectAdvanced,\n  mapStateToPropsFactories = defaultMapStateToPropsFactories,\n  mapDispatchToPropsFactories = defaultMapDispatchToPropsFactories,\n  mergePropsFactories = defaultMergePropsFactories,\n  selectorFactory = defaultSelectorFactory\n} = {}) {\n  return function connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps,\n    {\n      pure = true,\n      areStatesEqual = strictEqual,\n      areOwnPropsEqual = shallowEqual,\n      areStatePropsEqual = shallowEqual,\n      areMergedPropsEqual = shallowEqual,\n      ...extraOptions\n    } = {}\n  ) {\n    const initMapStateToProps = match(\n      mapStateToProps,\n      mapStateToPropsFactories,\n      'mapStateToProps'\n    )\n    const initMapDispatchToProps = match(\n      mapDispatchToProps,\n      mapDispatchToPropsFactories,\n      'mapDispatchToProps'\n    )\n    const initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps')\n\n    return connectHOC(selectorFactory, {\n      // used in error messages\n      methodName: 'connect',\n\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: name => `Connect(${name})`,\n\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n\n      // passed through to selectorFactory\n      initMapStateToProps,\n      initMapDispatchToProps,\n      initMergeProps,\n      pure,\n      areStatesEqual,\n      areOwnPropsEqual,\n      areStatePropsEqual,\n      areMergedPropsEqual,\n\n      // any extra options args can override defaults of connect or connectAdvanced\n      ...extraOptions\n    })\n  }\n}\n\nexport default createConnect()\n","import verifySubselectors from './verifySubselectors'\n\nexport function impureFinalPropsSelectorFactory(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  dispatch\n) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(\n      mapStateToProps(state, ownProps),\n      mapDispatchToProps(dispatch, ownProps),\n      ownProps\n    )\n  }\n}\n\nexport function pureFinalPropsSelectorFactory(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  dispatch,\n  { areStatesEqual, areOwnPropsEqual, areStatePropsEqual }\n) {\n  let hasRunAtLeastOnce = false\n  let state\n  let ownProps\n  let stateProps\n  let dispatchProps\n  let mergedProps\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState\n    ownProps = firstOwnProps\n    stateProps = mapStateToProps(state, ownProps)\n    dispatchProps = mapDispatchToProps(dispatch, ownProps)\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    hasRunAtLeastOnce = true\n    return mergedProps\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps)\n      stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps)\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps)\n    stateProps = nextStateProps\n\n    if (statePropsChanged)\n      mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n    return mergedProps\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps)\n    const stateChanged = !areStatesEqual(nextState, state)\n    state = nextState\n    ownProps = nextOwnProps\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState()\n    if (propsChanged) return handleNewProps()\n    if (stateChanged) return handleNewState()\n    return mergedProps\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce\n      ? handleSubsequentCalls(nextState, nextOwnProps)\n      : handleFirstCall(nextState, nextOwnProps)\n  }\n}\n\n// TODO: Add more comments\n\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nexport default function finalPropsSelectorFactory(\n  dispatch,\n  { initMapStateToProps, initMapDispatchToProps, initMergeProps, ...options }\n) {\n  const mapStateToProps = initMapStateToProps(dispatch, options)\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options)\n  const mergeProps = initMergeProps(dispatch, options)\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(\n      mapStateToProps,\n      mapDispatchToProps,\n      mergeProps,\n      options.displayName\n    )\n  }\n\n  const selectorFactory = options.pure\n    ? pureFinalPropsSelectorFactory\n    : impureFinalPropsSelectorFactory\n\n  return selectorFactory(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps,\n    dispatch,\n    options\n  )\n}\n","import { Provider, connect, connectAdvanced, ReactReduxContext } from 'react-redux';\nexport { Provider, connect, connectAdvanced, ReactReduxContext };\nexport default { Provider, connect, connectAdvanced, ReactReduxContext };\n","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\n\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function'\n    ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps')\n    : undefined\n}\n\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(() => ({})) : undefined\n}\n\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]\n","import { bindActionCreators } from 'redux'\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\n\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function'\n    ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps')\n    : undefined\n}\n\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps\n    ? wrapMapToPropsConstant(dispatch => ({ dispatch }))\n    : undefined\n}\n\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object'\n    ? wrapMapToPropsConstant(dispatch =>\n        bindActionCreators(mapDispatchToProps, dispatch)\n      )\n    : undefined\n}\n\nexport default [\n  whenMapDispatchToPropsIsFunction,\n  whenMapDispatchToPropsIsMissing,\n  whenMapDispatchToPropsIsObject\n]\n"]}